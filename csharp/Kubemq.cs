// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kubemq.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace KubeMQ.Grpc {

  /// <summary>Holder for reflection information generated from kubemq.proto</summary>
  public static partial class KubemqReflection {

    #region Descriptor
    /// <summary>File descriptor for kubemq.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KubemqReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxrdWJlbXEucHJvdG8SBmt1YmVtcSIHCgVFbXB0eSI2CgZSZXN1bHQSDwoH",
            "RXZlbnRJRBgBIAEoCRIMCgRTZW50GAIgASgIEg0KBUVycm9yGAMgASgJImoK",
            "BUV2ZW50Eg8KB0V2ZW50SUQYASABKAkSEAoIQ2xpZW50SUQYAiABKAkSDwoH",
            "Q2hhbm5lbBgDIAEoCRIQCghNZXRhZGF0YRgEIAEoCRIMCgRCb2R5GAUgASgM",
            "Eg0KBVN0b3JlGAYgASgIInUKDEV2ZW50UmVjZWl2ZRIPCgdFdmVudElEGAEg",
            "ASgJEg8KB0NoYW5uZWwYAiABKAkSEAoITWV0YWRhdGEYAyABKAkSDAoEQm9k",
            "eRgEIAEoDBIRCglUaW1lc3RhbXAYBSABKAMSEAoIU2VxdWVuY2UYBiABKAQi",
            "/wMKCVN1YnNjcmliZRI6ChFTdWJzY3JpYmVUeXBlRGF0YRgBIAEoDjIfLmt1",
            "YmVtcS5TdWJzY3JpYmUuU3Vic2NyaWJlVHlwZRIQCghDbGllbnRJRBgCIAEo",
            "CRIPCgdDaGFubmVsGAMgASgJEg0KBUdyb3VwGAQgASgJEj4KE0V2ZW50c1N0",
            "b3JlVHlwZURhdGEYBSABKA4yIS5rdWJlbXEuU3Vic2NyaWJlLkV2ZW50c1N0",
            "b3JlVHlwZRIcChRFdmVudHNTdG9yZVR5cGVWYWx1ZRgGIAEoAyJjCg1TdWJz",
            "Y3JpYmVUeXBlEhoKFlN1YnNjcmliZVR5cGVVbmRlZmluZWQQABIKCgZFdmVu",
            "dHMQARIPCgtFdmVudHNTdG9yZRACEgwKCENvbW1hbmRzEAMSCwoHUXVlcmll",
            "cxAEIsABCg9FdmVudHNTdG9yZVR5cGUSHAoYRXZlbnRzU3RvcmVUeXBlVW5k",
            "ZWZpbmVkEAASEAoMU3RhcnROZXdPbmx5EAESEgoOU3RhcnRGcm9tRmlyc3QQ",
            "AhIRCg1TdGFydEZyb21MYXN0EAMSEwoPU3RhcnRBdFNlcXVlbmNlEAQSDwoL",
            "U3RhcnRBdFRpbWUQBRIUChBTdGFydEF0VGltZURlbHRhEAYSGgoWU3RhcnRG",
            "cm9tTGFzdERlbGl2ZXJlZBAHIrACCgdSZXF1ZXN0EhEKCVJlcXVlc3RJRBgB",
            "IAEoCRI0Cg9SZXF1ZXN0VHlwZURhdGEYAiABKA4yGy5rdWJlbXEuUmVxdWVz",
            "dC5SZXF1ZXN0VHlwZRIQCghDbGllbnRJRBgDIAEoCRIPCgdDaGFubmVsGAQg",
            "ASgJEhAKCE1ldGFkYXRhGAUgASgJEgwKBEJvZHkYBiABKAwSFAoMUmVwbHlD",
            "aGFubmVsGAcgASgJEg8KB1RpbWVvdXQYCCABKAUSEAoIQ2FjaGVLZXkYCSAB",
            "KAkSEAoIQ2FjaGVUVEwYCiABKAUSDwoHQ29udGV4dBgLIAEoDCI9CgtSZXF1",
            "ZXN0VHlwZRIWChJSZXF1ZXN0VHlwZVVua25vd24QABILCgdDb21tYW5kEAES",
            "CQoFUXVlcnkQAiK8AQoIUmVzcG9uc2USEAoIQ2xpZW50SUQYASABKAkSEQoJ",
            "UmVxdWVzdElEGAIgASgJEhQKDFJlcGx5Q2hhbm5lbBgDIAEoCRIQCghNZXRh",
            "ZGF0YRgEIAEoCRIMCgRCb2R5GAUgASgMEhAKCENhY2hlSGl0GAYgASgIEhEK",
            "CVRpbWVzdGFtcBgHIAEoAxIQCghFeGVjdXRlZBgIIAEoCBINCgVFcnJvchgJ",
            "IAEoCRIPCgdDb250ZXh0GAogASgMMtcCCgZrdWJlbXESLAoJU2VuZEV2ZW50",
            "Eg0ua3ViZW1xLkV2ZW50Gg4ua3ViZW1xLlJlc3VsdCIAEjcKEFNlbmRFdmVu",
            "dHNTdHJlYW0SDS5rdWJlbXEuRXZlbnQaDi5rdWJlbXEuUmVzdWx0IgAoATAB",
            "EkAKEVN1YnNjcmliZVRvRXZlbnRzEhEua3ViZW1xLlN1YnNjcmliZRoULmt1",
            "YmVtcS5FdmVudFJlY2VpdmUiADABEj0KE1N1YnNjcmliZVRvUmVxdWVzdHMS",
            "ES5rdWJlbXEuU3Vic2NyaWJlGg8ua3ViZW1xLlJlcXVlc3QiADABEjIKC1Nl",
            "bmRSZXF1ZXN0Eg8ua3ViZW1xLlJlcXVlc3QaEC5rdWJlbXEuUmVzcG9uc2Ui",
            "ABIxCgxTZW5kUmVzcG9uc2USEC5rdWJlbXEuUmVzcG9uc2UaDS5rdWJlbXEu",
            "RW1wdHkiAEIOqgILS3ViZU1RLkdycGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::KubeMQ.Grpc.Empty), global::KubeMQ.Grpc.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KubeMQ.Grpc.Result), global::KubeMQ.Grpc.Result.Parser, new[]{ "EventID", "Sent", "Error" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KubeMQ.Grpc.Event), global::KubeMQ.Grpc.Event.Parser, new[]{ "EventID", "ClientID", "Channel", "Metadata", "Body", "Store" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KubeMQ.Grpc.EventReceive), global::KubeMQ.Grpc.EventReceive.Parser, new[]{ "EventID", "Channel", "Metadata", "Body", "Timestamp", "Sequence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KubeMQ.Grpc.Subscribe), global::KubeMQ.Grpc.Subscribe.Parser, new[]{ "SubscribeTypeData", "ClientID", "Channel", "Group", "EventsStoreTypeData", "EventsStoreTypeValue" }, null, new[]{ typeof(global::KubeMQ.Grpc.Subscribe.Types.SubscribeType), typeof(global::KubeMQ.Grpc.Subscribe.Types.EventsStoreType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KubeMQ.Grpc.Request), global::KubeMQ.Grpc.Request.Parser, new[]{ "RequestID", "RequestTypeData", "ClientID", "Channel", "Metadata", "Body", "ReplyChannel", "Timeout", "CacheKey", "CacheTTL", "Context" }, null, new[]{ typeof(global::KubeMQ.Grpc.Request.Types.RequestType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::KubeMQ.Grpc.Response), global::KubeMQ.Grpc.Response.Parser, new[]{ "ClientID", "RequestID", "ReplyChannel", "Metadata", "Body", "CacheHit", "Timestamp", "Executed", "Error", "Context" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KubeMQ.Grpc.KubemqReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Result : pb::IMessage<Result> {
    private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KubeMQ.Grpc.KubemqReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result(Result other) : this() {
      eventID_ = other.eventID_;
      sent_ = other.sent_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result Clone() {
      return new Result(this);
    }

    /// <summary>Field number for the "EventID" field.</summary>
    public const int EventIDFieldNumber = 1;
    private string eventID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventID {
      get { return eventID_; }
      set {
        eventID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sent" field.</summary>
    public const int SentFieldNumber = 2;
    private bool sent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Sent {
      get { return sent_; }
      set {
        sent_ = value;
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventID != other.EventID) return false;
      if (Sent != other.Sent) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventID.Length != 0) hash ^= EventID.GetHashCode();
      if (Sent != false) hash ^= Sent.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventID);
      }
      if (Sent != false) {
        output.WriteRawTag(16);
        output.WriteBool(Sent);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventID);
      }
      if (Sent != false) {
        size += 1 + 1;
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Result other) {
      if (other == null) {
        return;
      }
      if (other.EventID.Length != 0) {
        EventID = other.EventID;
      }
      if (other.Sent != false) {
        Sent = other.Sent;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventID = input.ReadString();
            break;
          }
          case 16: {
            Sent = input.ReadBool();
            break;
          }
          case 26: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KubeMQ.Grpc.KubemqReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      eventID_ = other.eventID_;
      clientID_ = other.clientID_;
      channel_ = other.channel_;
      metadata_ = other.metadata_;
      body_ = other.body_;
      store_ = other.store_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "EventID" field.</summary>
    public const int EventIDFieldNumber = 1;
    private string eventID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventID {
      get { return eventID_; }
      set {
        eventID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientID" field.</summary>
    public const int ClientIDFieldNumber = 2;
    private string clientID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientID {
      get { return clientID_; }
      set {
        clientID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private string metadata_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 5;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Store" field.</summary>
    public const int StoreFieldNumber = 6;
    private bool store_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Store {
      get { return store_; }
      set {
        store_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventID != other.EventID) return false;
      if (ClientID != other.ClientID) return false;
      if (Channel != other.Channel) return false;
      if (Metadata != other.Metadata) return false;
      if (Body != other.Body) return false;
      if (Store != other.Store) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventID.Length != 0) hash ^= EventID.GetHashCode();
      if (ClientID.Length != 0) hash ^= ClientID.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (Store != false) hash ^= Store.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventID);
      }
      if (ClientID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientID);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Metadata);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Body);
      }
      if (Store != false) {
        output.WriteRawTag(48);
        output.WriteBool(Store);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventID);
      }
      if (ClientID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientID);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (Store != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.EventID.Length != 0) {
        EventID = other.EventID;
      }
      if (other.ClientID.Length != 0) {
        ClientID = other.ClientID;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.Store != false) {
        Store = other.Store;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventID = input.ReadString();
            break;
          }
          case 18: {
            ClientID = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Metadata = input.ReadString();
            break;
          }
          case 42: {
            Body = input.ReadBytes();
            break;
          }
          case 48: {
            Store = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventReceive : pb::IMessage<EventReceive> {
    private static readonly pb::MessageParser<EventReceive> _parser = new pb::MessageParser<EventReceive>(() => new EventReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KubeMQ.Grpc.KubemqReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventReceive(EventReceive other) : this() {
      eventID_ = other.eventID_;
      channel_ = other.channel_;
      metadata_ = other.metadata_;
      body_ = other.body_;
      timestamp_ = other.timestamp_;
      sequence_ = other.sequence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventReceive Clone() {
      return new EventReceive(this);
    }

    /// <summary>Field number for the "EventID" field.</summary>
    public const int EventIDFieldNumber = 1;
    private string eventID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventID {
      get { return eventID_; }
      set {
        eventID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Metadata" field.</summary>
    public const int MetadataFieldNumber = 3;
    private string metadata_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 4;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "Sequence" field.</summary>
    public const int SequenceFieldNumber = 6;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventID != other.EventID) return false;
      if (Channel != other.Channel) return false;
      if (Metadata != other.Metadata) return false;
      if (Body != other.Body) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Sequence != other.Sequence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventID.Length != 0) hash ^= EventID.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventID);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Metadata);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Body);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Timestamp);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventID);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventReceive other) {
      if (other == null) {
        return;
      }
      if (other.EventID.Length != 0) {
        EventID = other.EventID;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventID = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 26: {
            Metadata = input.ReadString();
            break;
          }
          case 34: {
            Body = input.ReadBytes();
            break;
          }
          case 40: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 48: {
            Sequence = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Subscribe : pb::IMessage<Subscribe> {
    private static readonly pb::MessageParser<Subscribe> _parser = new pb::MessageParser<Subscribe>(() => new Subscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KubeMQ.Grpc.KubemqReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe(Subscribe other) : this() {
      subscribeTypeData_ = other.subscribeTypeData_;
      clientID_ = other.clientID_;
      channel_ = other.channel_;
      group_ = other.group_;
      eventsStoreTypeData_ = other.eventsStoreTypeData_;
      eventsStoreTypeValue_ = other.eventsStoreTypeValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe Clone() {
      return new Subscribe(this);
    }

    /// <summary>Field number for the "SubscribeTypeData" field.</summary>
    public const int SubscribeTypeDataFieldNumber = 1;
    private global::KubeMQ.Grpc.Subscribe.Types.SubscribeType subscribeTypeData_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KubeMQ.Grpc.Subscribe.Types.SubscribeType SubscribeTypeData {
      get { return subscribeTypeData_; }
      set {
        subscribeTypeData_ = value;
      }
    }

    /// <summary>Field number for the "ClientID" field.</summary>
    public const int ClientIDFieldNumber = 2;
    private string clientID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientID {
      get { return clientID_; }
      set {
        clientID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 4;
    private string group_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Group {
      get { return group_; }
      set {
        group_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EventsStoreTypeData" field.</summary>
    public const int EventsStoreTypeDataFieldNumber = 5;
    private global::KubeMQ.Grpc.Subscribe.Types.EventsStoreType eventsStoreTypeData_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KubeMQ.Grpc.Subscribe.Types.EventsStoreType EventsStoreTypeData {
      get { return eventsStoreTypeData_; }
      set {
        eventsStoreTypeData_ = value;
      }
    }

    /// <summary>Field number for the "EventsStoreTypeValue" field.</summary>
    public const int EventsStoreTypeValueFieldNumber = 6;
    private long eventsStoreTypeValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventsStoreTypeValue {
      get { return eventsStoreTypeValue_; }
      set {
        eventsStoreTypeValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscribeTypeData != other.SubscribeTypeData) return false;
      if (ClientID != other.ClientID) return false;
      if (Channel != other.Channel) return false;
      if (Group != other.Group) return false;
      if (EventsStoreTypeData != other.EventsStoreTypeData) return false;
      if (EventsStoreTypeValue != other.EventsStoreTypeValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscribeTypeData != 0) hash ^= SubscribeTypeData.GetHashCode();
      if (ClientID.Length != 0) hash ^= ClientID.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Group.Length != 0) hash ^= Group.GetHashCode();
      if (EventsStoreTypeData != 0) hash ^= EventsStoreTypeData.GetHashCode();
      if (EventsStoreTypeValue != 0L) hash ^= EventsStoreTypeValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubscribeTypeData != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscribeTypeData);
      }
      if (ClientID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientID);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Group.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Group);
      }
      if (EventsStoreTypeData != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EventsStoreTypeData);
      }
      if (EventsStoreTypeValue != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EventsStoreTypeValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubscribeTypeData != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscribeTypeData);
      }
      if (ClientID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientID);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Group.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Group);
      }
      if (EventsStoreTypeData != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventsStoreTypeData);
      }
      if (EventsStoreTypeValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EventsStoreTypeValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subscribe other) {
      if (other == null) {
        return;
      }
      if (other.SubscribeTypeData != 0) {
        SubscribeTypeData = other.SubscribeTypeData;
      }
      if (other.ClientID.Length != 0) {
        ClientID = other.ClientID;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Group.Length != 0) {
        Group = other.Group;
      }
      if (other.EventsStoreTypeData != 0) {
        EventsStoreTypeData = other.EventsStoreTypeData;
      }
      if (other.EventsStoreTypeValue != 0L) {
        EventsStoreTypeValue = other.EventsStoreTypeValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            subscribeTypeData_ = (global::KubeMQ.Grpc.Subscribe.Types.SubscribeType) input.ReadEnum();
            break;
          }
          case 18: {
            ClientID = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Group = input.ReadString();
            break;
          }
          case 40: {
            eventsStoreTypeData_ = (global::KubeMQ.Grpc.Subscribe.Types.EventsStoreType) input.ReadEnum();
            break;
          }
          case 48: {
            EventsStoreTypeValue = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Subscribe message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SubscribeType {
        [pbr::OriginalName("SubscribeTypeUndefined")] Undefined = 0,
        [pbr::OriginalName("Events")] Events = 1,
        [pbr::OriginalName("EventsStore")] EventsStore = 2,
        [pbr::OriginalName("Commands")] Commands = 3,
        [pbr::OriginalName("Queries")] Queries = 4,
      }

      public enum EventsStoreType {
        [pbr::OriginalName("EventsStoreTypeUndefined")] Undefined = 0,
        [pbr::OriginalName("StartNewOnly")] StartNewOnly = 1,
        [pbr::OriginalName("StartFromFirst")] StartFromFirst = 2,
        [pbr::OriginalName("StartFromLast")] StartFromLast = 3,
        [pbr::OriginalName("StartAtSequence")] StartAtSequence = 4,
        [pbr::OriginalName("StartAtTime")] StartAtTime = 5,
        [pbr::OriginalName("StartAtTimeDelta")] StartAtTimeDelta = 6,
        [pbr::OriginalName("StartFromLastDelivered")] StartFromLastDelivered = 7,
      }

    }
    #endregion

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KubeMQ.Grpc.KubemqReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      requestID_ = other.requestID_;
      requestTypeData_ = other.requestTypeData_;
      clientID_ = other.clientID_;
      channel_ = other.channel_;
      metadata_ = other.metadata_;
      body_ = other.body_;
      replyChannel_ = other.replyChannel_;
      timeout_ = other.timeout_;
      cacheKey_ = other.cacheKey_;
      cacheTTL_ = other.cacheTTL_;
      context_ = other.context_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "RequestID" field.</summary>
    public const int RequestIDFieldNumber = 1;
    private string requestID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestID {
      get { return requestID_; }
      set {
        requestID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestTypeData" field.</summary>
    public const int RequestTypeDataFieldNumber = 2;
    private global::KubeMQ.Grpc.Request.Types.RequestType requestTypeData_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::KubeMQ.Grpc.Request.Types.RequestType RequestTypeData {
      get { return requestTypeData_; }
      set {
        requestTypeData_ = value;
      }
    }

    /// <summary>Field number for the "ClientID" field.</summary>
    public const int ClientIDFieldNumber = 3;
    private string clientID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientID {
      get { return clientID_; }
      set {
        clientID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 4;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Metadata" field.</summary>
    public const int MetadataFieldNumber = 5;
    private string metadata_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 6;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReplyChannel" field.</summary>
    public const int ReplyChannelFieldNumber = 7;
    private string replyChannel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplyChannel {
      get { return replyChannel_; }
      set {
        replyChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Timeout" field.</summary>
    public const int TimeoutFieldNumber = 8;
    private int timeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "CacheKey" field.</summary>
    public const int CacheKeyFieldNumber = 9;
    private string cacheKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CacheKey {
      get { return cacheKey_; }
      set {
        cacheKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CacheTTL" field.</summary>
    public const int CacheTTLFieldNumber = 10;
    private int cacheTTL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CacheTTL {
      get { return cacheTTL_; }
      set {
        cacheTTL_ = value;
      }
    }

    /// <summary>Field number for the "Context" field.</summary>
    public const int ContextFieldNumber = 11;
    private pb::ByteString context_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestID != other.RequestID) return false;
      if (RequestTypeData != other.RequestTypeData) return false;
      if (ClientID != other.ClientID) return false;
      if (Channel != other.Channel) return false;
      if (Metadata != other.Metadata) return false;
      if (Body != other.Body) return false;
      if (ReplyChannel != other.ReplyChannel) return false;
      if (Timeout != other.Timeout) return false;
      if (CacheKey != other.CacheKey) return false;
      if (CacheTTL != other.CacheTTL) return false;
      if (Context != other.Context) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestID.Length != 0) hash ^= RequestID.GetHashCode();
      if (RequestTypeData != 0) hash ^= RequestTypeData.GetHashCode();
      if (ClientID.Length != 0) hash ^= ClientID.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (ReplyChannel.Length != 0) hash ^= ReplyChannel.GetHashCode();
      if (Timeout != 0) hash ^= Timeout.GetHashCode();
      if (CacheKey.Length != 0) hash ^= CacheKey.GetHashCode();
      if (CacheTTL != 0) hash ^= CacheTTL.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestID);
      }
      if (RequestTypeData != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RequestTypeData);
      }
      if (ClientID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientID);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Channel);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Metadata);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Body);
      }
      if (ReplyChannel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReplyChannel);
      }
      if (Timeout != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Timeout);
      }
      if (CacheKey.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CacheKey);
      }
      if (CacheTTL != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CacheTTL);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Context);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestID);
      }
      if (RequestTypeData != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestTypeData);
      }
      if (ClientID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientID);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (ReplyChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplyChannel);
      }
      if (Timeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeout);
      }
      if (CacheKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CacheKey);
      }
      if (CacheTTL != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CacheTTL);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Context);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.RequestID.Length != 0) {
        RequestID = other.RequestID;
      }
      if (other.RequestTypeData != 0) {
        RequestTypeData = other.RequestTypeData;
      }
      if (other.ClientID.Length != 0) {
        ClientID = other.ClientID;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.ReplyChannel.Length != 0) {
        ReplyChannel = other.ReplyChannel;
      }
      if (other.Timeout != 0) {
        Timeout = other.Timeout;
      }
      if (other.CacheKey.Length != 0) {
        CacheKey = other.CacheKey;
      }
      if (other.CacheTTL != 0) {
        CacheTTL = other.CacheTTL;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestID = input.ReadString();
            break;
          }
          case 16: {
            requestTypeData_ = (global::KubeMQ.Grpc.Request.Types.RequestType) input.ReadEnum();
            break;
          }
          case 26: {
            ClientID = input.ReadString();
            break;
          }
          case 34: {
            Channel = input.ReadString();
            break;
          }
          case 42: {
            Metadata = input.ReadString();
            break;
          }
          case 50: {
            Body = input.ReadBytes();
            break;
          }
          case 58: {
            ReplyChannel = input.ReadString();
            break;
          }
          case 64: {
            Timeout = input.ReadInt32();
            break;
          }
          case 74: {
            CacheKey = input.ReadString();
            break;
          }
          case 80: {
            CacheTTL = input.ReadInt32();
            break;
          }
          case 90: {
            Context = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RequestType {
        [pbr::OriginalName("RequestTypeUnknown")] Unknown = 0,
        [pbr::OriginalName("Command")] Command = 1,
        [pbr::OriginalName("Query")] Query = 2,
      }

    }
    #endregion

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::KubeMQ.Grpc.KubemqReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      clientID_ = other.clientID_;
      requestID_ = other.requestID_;
      replyChannel_ = other.replyChannel_;
      metadata_ = other.metadata_;
      body_ = other.body_;
      cacheHit_ = other.cacheHit_;
      timestamp_ = other.timestamp_;
      executed_ = other.executed_;
      error_ = other.error_;
      context_ = other.context_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "ClientID" field.</summary>
    public const int ClientIDFieldNumber = 1;
    private string clientID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientID {
      get { return clientID_; }
      set {
        clientID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestID" field.</summary>
    public const int RequestIDFieldNumber = 2;
    private string requestID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestID {
      get { return requestID_; }
      set {
        requestID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReplyChannel" field.</summary>
    public const int ReplyChannelFieldNumber = 3;
    private string replyChannel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplyChannel {
      get { return replyChannel_; }
      set {
        replyChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private string metadata_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 5;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CacheHit" field.</summary>
    public const int CacheHitFieldNumber = 6;
    private bool cacheHit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CacheHit {
      get { return cacheHit_; }
      set {
        cacheHit_ = value;
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 8;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 9;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Context" field.</summary>
    public const int ContextFieldNumber = 10;
    private pb::ByteString context_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientID != other.ClientID) return false;
      if (RequestID != other.RequestID) return false;
      if (ReplyChannel != other.ReplyChannel) return false;
      if (Metadata != other.Metadata) return false;
      if (Body != other.Body) return false;
      if (CacheHit != other.CacheHit) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Executed != other.Executed) return false;
      if (Error != other.Error) return false;
      if (Context != other.Context) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientID.Length != 0) hash ^= ClientID.GetHashCode();
      if (RequestID.Length != 0) hash ^= RequestID.GetHashCode();
      if (ReplyChannel.Length != 0) hash ^= ReplyChannel.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (CacheHit != false) hash ^= CacheHit.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientID);
      }
      if (RequestID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestID);
      }
      if (ReplyChannel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReplyChannel);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Metadata);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Body);
      }
      if (CacheHit != false) {
        output.WriteRawTag(48);
        output.WriteBool(CacheHit);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      if (Executed != false) {
        output.WriteRawTag(64);
        output.WriteBool(Executed);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Error);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(Context);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientID);
      }
      if (RequestID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestID);
      }
      if (ReplyChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplyChannel);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (CacheHit != false) {
        size += 1 + 1;
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Context);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.ClientID.Length != 0) {
        ClientID = other.ClientID;
      }
      if (other.RequestID.Length != 0) {
        RequestID = other.RequestID;
      }
      if (other.ReplyChannel.Length != 0) {
        ReplyChannel = other.ReplyChannel;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.CacheHit != false) {
        CacheHit = other.CacheHit;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientID = input.ReadString();
            break;
          }
          case 18: {
            RequestID = input.ReadString();
            break;
          }
          case 26: {
            ReplyChannel = input.ReadString();
            break;
          }
          case 34: {
            Metadata = input.ReadString();
            break;
          }
          case 42: {
            Body = input.ReadBytes();
            break;
          }
          case 48: {
            CacheHit = input.ReadBool();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 64: {
            Executed = input.ReadBool();
            break;
          }
          case 74: {
            Error = input.ReadString();
            break;
          }
          case 82: {
            Context = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
